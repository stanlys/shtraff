import Head from "next/head";
import { Inter } from "next/font/google";
import style from "./../styles/Home.module.css";
import { Button } from "antd";
import { Input, Space } from "antd";
import React, { useEffect, useState } from "react";
import { ICunsumers } from "@app/MOCK_DATA";
import { Table } from "antd";
import type { ColumnsType, TableProps } from "antd/es/table";
import { CopyOutlined } from "@ant-design/icons";

import { ModalWindow } from "./api/modal";

const inter = Inter({ subsets: ["latin"] });

interface DataType {
    key: React.Key;
    name: string;
    id: string;
    email: string;
    pay: string;
    createAt: string;
    changeAt: string;
}

const loggin = (value: any) => {
    navigator.clipboard.writeText(value);
};

const columns: ColumnsType<DataType> = [
    {
        title: "Имя",
        dataIndex: "name",
        sorter: (a, b) => a.name.length - b.name.length,
        sortDirections: ["descend"],
    },
    {
        title: "ID",
        dataIndex: "id",
        render: (value: any, recoder: { key: React.Key }) => {
            return (
                <span>
                    {value} <CopyOutlined onClick={() => loggin(value)} />
                </span>
            );
        },
    },
    {
        title: "Email",
        dataIndex: "email",
        defaultSortOrder: "descend",
        sorter: (a, b) => a.id.length - b.id.length,
    },
    {
        title: "Отсрочка оплаты",
        dataIndex: "pay",
        defaultSortOrder: "descend",
        sorter: (a, b) => a.id.length - b.id.length,
    },
    {
        title: "Создан",
        dataIndex: "createAt",
        defaultSortOrder: "descend",
        sorter: (a, b) => a.id.length - b.id.length,
    },
    {
        title: "Изменен",
        dataIndex: "changeAt",
        defaultSortOrder: "descend",
        sorter: (a, b) => a.id.length - b.id.length,
    },
];

const { Search } = Input;

export default function Home() {
    const [constumers, setCostumers] = useState<ICunsumers>();
    const [open, setOpen] = useState(false);

    const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);

    const onSelectChange = (newSelectedRowKeys: React.Key[]) => {
        console.log("selectedRowKeys changed: ", newSelectedRowKeys);
        setSelectedRowKeys(newSelectedRowKeys);
    };

    const rowSelection = {
        selectedRowKeys,
        onChange: onSelectChange,
    };

    useEffect(() => {
        fetch("/note")
            .then((response) => response.json())
            .then((json) => setCostumers(json));
    }, []);

    const setDataSource = () => {
        return constumers?.customers.map((el) => ({
            id: el.id,
            name: el.name,
            email: el.email,
            key: el.id,
            pay: el.deferral_days,
            createAt: el.created_at,
            changeAt: el.updated_at,
        }));
    };

    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className={style.main}>
                <div className={style.tableCaption}>
                    <h3>Клиенты:</h3>
                    <div className={style.tableCaption__btns}>
                        <Search placeholder="input search text" style={{ width: 200 }} />
                        <Button type="primary" disabled>
                            Экспорт
                        </Button>
                        <Button type="primary" onClick={() => setOpen(!open)}>
                            + Добавить клиента
                        </Button>
                    </div>
                </div>
                <div>
                    <Table
                        rowSelection={rowSelection}
                        columns={columns}
                        dataSource={setDataSource()}
                        
                        style={{ minHeight: 600 }}
                        className={style.table}
                    />
                </div>
            </main>
            <ModalWindow open={open} setOpen={setOpen}></ModalWindow>
        </>
    );
}
